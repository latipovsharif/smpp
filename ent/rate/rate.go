// Code generated by entc, DO NOT EDIT.

package rate

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the rate type in the database.
	Label = "rate"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreateAt holds the string denoting the create_at field in the database.
	FieldCreateAt = "create_at"
	// FieldUpdateAt holds the string denoting the update_at field in the database.
	FieldUpdateAt = "update_at"

	// EdgeRateID holds the string denoting the rate_id edge name in mutations.
	EdgeRateID = "rate_id"

	// Table holds the table name of the rate in the database.
	Table = "rates"
	// RateIDTable is the table the holds the rate_id relation/edge.
	RateIDTable = "rate_prices"
	// RateIDInverseTable is the table name for the RatePrice entity.
	// It exists in this package in order to avoid circular dependency with the "rateprice" package.
	RateIDInverseTable = "rate_prices"
	// RateIDColumn is the table column denoting the rate_id relation/edge.
	RateIDColumn = "rate_id"
)

// Columns holds all SQL columns for rate fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreateAt,
	FieldUpdateAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateAt holds the default value on creation for the "create_at" field.
	DefaultCreateAt func() time.Time
	// DefaultUpdateAt holds the default value on creation for the "update_at" field.
	DefaultUpdateAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
